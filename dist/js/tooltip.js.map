{"version":3,"sources":["tooltip.js"],"names":["Tooltip","selector","evt","console","log","target","tooltipText","getAttribute","tooltipDiv","innerHTML","$tooltips","document","querySelectorAll","forEach","$tooltip","setupTooltip","createElement","classList","add","body","appendChild","addEventListener","mouseover"],"mappings":";;;;;;;;;;IAAMA,O;AACL;AACkB;AACC;AAEnB;AACA,mBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAAA,uCAJV,IAIU;;AAAA,wCAHT,IAGS;;AAAA,uCA8BV,UAACC,GAAD,EAAS;AACpB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAAG,CAACG,MAAhC,EAAwCH,GAAxC;AAEA,UAAII,WAAW,GAAGJ,GAAG,CAACG,MAAJ,CAAWE,YAAX,CAAwB,cAAxB,CAAlB;AACA,MAAA,KAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4BH,WAA5B;AACA,KApCqB;;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC;AAEA,SAAKS,SAAL,GAAiBC,QAAQ,CAACC,gBAAT,CAA0BX,QAA1B,CAAjB;AAEA,SAAKS,SAAL,CAAeG,OAAf,CAAuB,UAACC,QAAD,EAAc;AACpC,MAAA,KAAI,CAACC,YAAL,CAAkBD,QAAlB;AACA,KAFD;AAGA,SAAKN,UAAL,GAAkBG,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAlB;AACA,SAAKR,UAAL,CAAgBC,SAAhB,GAA4B,MAA5B;AACA,SAAKD,UAAL,CAAgBS,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACAP,IAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0B,KAAKZ,UAA/B;AACA;;;;iCAEYM,Q,EAAU;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBU,QAAnB;AAEA,UAAIR,WAAW,GAAGQ,QAAQ,CAACP,YAAT,CAAsB,cAAtB,CAAlB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,WAApB;;AACA,UAAI,CAACA,WAAL,EAAkB;AACjB;AACA;;AAEDH,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,WAAtC,EATsB,CAWtB;;AACAQ,MAAAA,QAAQ,CAACO,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,SAA5C;AACA,K,CACD","sourcesContent":["class Tooltip {\n\t//setnup a couple of variables that will be used in different locations\n\t$tooltips = null; //$ means it will be a dom element and plural means its an array\n\ttooltipDiv = null; // will hold the single tooltip that we create\n\n\t// the constructor is the starting point for our class anytime its loaded via Tooltip()\n\tconstructor(selector) {\n\t\tconsole.log('creating new tooltip', selector);\n\n\t\tthis.$tooltips = document.querySelectorAll(selector);\n\n\t\tthis.$tooltips.forEach(($tooltip) => {\n\t\t\tthis.setupTooltip($tooltip);\n\t\t});\n\t\tthis.tooltipDiv = document.createElement('div');\n\t\tthis.tooltipDiv.innerHTML = 'TEST';\n\t\tthis.tooltipDiv.classList.add('show-tooltip');\n\t\tdocument.body.appendChild(this.tooltipDiv);\n\t}\n\n\tsetupTooltip($tooltip) {\n\t\tconsole.log('tip', $tooltip);\n\n\t\tvar tooltipText = $tooltip.getAttribute('data-tooltip');\n\t\tconsole.log('text', tooltipText);\n\t\tif (!tooltipText) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log('setting up tooltip for', tooltipText);\n\n\t\t//add a hover state with addEventListener\n\t\t$tooltip.addEventListener('mouseover', this.mouseover);\n\t}\n\t// mouseover(evt){}\t\t//\"this\" maps to the evt.target\n\n\tmouseover = (evt) => {\n\t\t// \"this\" maps to the tooltip instance\n\t\tconsole.log('mousing over', evt.target, evt);\n\n\t\tvar tooltipText = evt.target.getAttribute('data-tooltip');\n\t\tthis.tooltipDiv.innerHTML = tooltipText;\n\t};\n}\n"],"file":"tooltip.js"}